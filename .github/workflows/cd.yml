name: cd

on:
  push:
    tags:
      - "v**"

jobs:
  aws:
    name: AWS
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials using Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPO: fragments
          VERSION_TAG: ${{ github.ref_name }}
        uses: docker/build-push-action@v6
        with:
          context: ./fragments-backend
          file: ./fragments-backend/Dockerfile
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ env.VERSION_TAG }}, ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:latest

      - name: Update ECS task definition with new image
        run: |
          # Get the ECR image URI
          ECR_IMAGE="${{ steps.login-ecr.outputs.registry }}/fragments:${{ github.ref_name }}"

          # Update the task definition file with the new image
          sed -i "s|image:.*|image: \"$ECR_IMAGE\"|" fragments-backend/ecs-task-definition.json

          # Register the new task definition
          aws ecs register-task-definition --cli-input-json file://fragments-backend/ecs-task-definition.json

      - name: Update ECS service
        run: |
          # Update the ECS service with the new task definition
          aws ecs update-service \
            --cluster fragments \
            --service fragments \
            --task-definition fragments:${{ github.ref_name }}

      - name: Wait for service stability
        run: |
          # Wait for the service to become stable
          aws ecs wait services-stable \
            --cluster fragments \
            --services fragments
